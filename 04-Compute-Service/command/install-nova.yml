---
- name: "Compute : Nova 설치 ~~~~~~~~~~~~~~!!!"
  hosts: remotes
  become: yes
  any_errors_fatal: true

  vars: 
    region_name: RegionOne
    path_config: "/etc/nova/nova.conf"    

  tasks:

    # Service Install  
    - name: Install nova-compute
      ansible.builtin.apt:
        name:
          - nova-compute
        state: present
        update_cache: yes
        cache_valid_time: 3600
      when: hostname != 'controller'


    - name: Set nova-compute and other configurations in {{ path_config }}
      ini_file:
        path: "{{ path_config }}"
        section: "{{ item.section }}"
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        mode: 0644
      loop:
        - { section: 'DEFAULT', option: 'transport_url', value: "rabbit://openstack:{{STACK_PASSWD}}@controller" }
        - { section: 'api', option: 'auth_strategy', value: "keystone" }
        - { section: 'keystone_authtoken', option: 'www_authenticate_uri', value: "http://controller:5000/" }
        - { section: 'keystone_authtoken', option: 'auth_url', value: "http://controller:5000/" }
        - { section: 'keystone_authtoken', option: 'memcached_servers', value: "controller:11211" }
        - { section: 'keystone_authtoken', option: 'auth_type', value: "password" }
        - { section: 'keystone_authtoken', option: 'project_domain_name', value: "Default" }
        - { section: 'keystone_authtoken', option: 'user_domain_name', value: "Default" }
        - { section: 'keystone_authtoken', option: 'project_name', value: "service" }
        - { section: 'keystone_authtoken', option: 'username', value: "nova" }
        - { section: 'keystone_authtoken', option: 'password', value: "{{STACK_PASSWD}}" }
        - { section: 'DEFAULT', option: 'my_ip', value: "{{ inventory_hostname }}" }
        - { section: 'vnc', option: 'enabled', value: "true" }
        - { section: 'vnc', option: 'server_listen', value: "0.0.0.0" }
        - { section: 'vnc', option: 'server_proxyclient_address', value: "$my_ip" }
        - { section: 'vnc', option: 'novncproxy_base_url', value: "http://controller:6080/vnc_auto.html" }
        - { section: 'glance', option: 'api_servers', value: "http://controller:9292" }
        - { section: 'oslo_concurrency', option: 'lock_path', value: "/var/lib/nova/tmp" }
        - { section: 'placement', option: 'region_name', value: "{{ region_name }}" }
        - { section: 'placement', option: 'project_domain_name', value: "Default" }
        - { section: 'placement', option: 'project_name', value: "service" }
        - { section: 'placement', option: 'auth_type', value: "password" }
        - { section: 'placement', option: 'user_domain_name', value: "Default" }
        - { section: 'placement', option: 'auth_url', value: "http://controller:5000/v3" }
        - { section: 'placement', option: 'username', value: "placement" }
        - { section: 'placement', option: 'password', value: "{{STACK_PASSWD}}" }
      when: hostname != 'controller'


    - name: Display CPU architecture
      debug:
        msg: "{{ ansible_architecture }}"


    - name: Install packages on arm64 architecture
      block:
        - name: Install required packages
          apt:
            name:
              - qemu-kvm              
              - virtinst
              - bridge-utils
              - cpu-checker
              - virt-manager
              - qemu-efi
            state: present
        - name: Add current user to kvm group
          user:
            name: "{{ ansible_env.USER }}"
            groups: kvm
            append: yes
        - name: Restart nova-compute service
          service:
            name: nova-compute
            state: restarted
      when: ansible_architecture == "aarch64" and hostname != 'controller'
  

    - name: Set virt_type to qemu for non-arm64 architectures
      block:
        - name: Set virt_type in nova-compute.conf
          ini_file:
            path: /etc/nova/nova-compute.conf
            section: libvirt
            option: virt_type
            value: qemu
        - name: Restart nova-compute service
          service:
            name: nova-compute
            state: restarted
      when: ansible_architecture == "x86_64" and hostname != 'controller'